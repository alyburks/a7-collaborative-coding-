# With the people around you, create a vector "people" that stores each of your names
people
people <- c("jeff", "joel", "sam", "evan")
x <- c(x,y)
z <- c(x,y)
people
ages
ages <- c(20, 35, 19, 20)
x <- 100
y <- 200
z <- c(x,y)
z
numbers <- c(13, 15, 15)
length(numbers)
len <- length(numbers)
len
puppies <- 200
cost <- 220
total_cost <- puppies*cost
total_cost
major <- "informatics"
major
phrase <- "My major is " + major
phrase <- "My major is " major
phrase <- "My major is " major
phrase <- paste("My major is ", major)
major <- c("informatics")
major
phrase <- paste("My major is ", major)
phrase
phrase <- paste("My major is", major)
phrase
classes <- c("BIO 118", "CSE 142", "INFO 498F")
classes
classes <- c("BIO 118","CSE 142","INFO 498F")
classes
num_classes <- length(classes)
num_classes
favorite_class <- ([3]classes)
favorite_class <- [3]classes
favorite_class <- 3 classes
favorite_class
favorite_class <- c([3]classes)
favorite_class <- classes[3]
favorite_class
require(knitr)
require(jsonlite)
install.packages("jsonlite")
require(jsonlite)
install.packages("dplyr")
require(dplyr)
personal_access_token <- "d86c7d3c9560411234ed5de6663cb931c656fd3f"
git_hub_organization <- "INFO-498F"
user <- "evantoby"
personal_access_token <- "d86c7d3c9560411234ed5de6663cb931c656fd3f"
base_url <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
data <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
fromJSON(data)
install.packages("curl")
fromJSON(data)
View(fromJSON(data))
View(fromJSON(data))
git_data <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
fromJSON(git_data)
repositories <- fromJSON(git_data$repos_url)
class(git_data)
View(git_data)
git_data
git_data_query <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
git_data <- fromJSON(git_data_query)
git_hub_organization <- "INFO-498F"
user <- "evantoby"
personal_access_token <- "d86c7d3c9560411234ed5de6663cb931c656fd3f"
git_data_query <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
git_data <- fromJSON(git_data_query)
repositories <- git_data_query$
git_hub_organization <- "INFO-498F"
user <- "evantoby"
personal_access_token <- "d86c7d3c9560411234ed5de6663cb931c656fd3f"
git_data_query <- paste0("https://api.github.com/users/", user,"?access_token=", personal_access_token)
git_data <- fromJSON(git_data_query)
#Stored the Mass-Shooting-Data.csv into a variable called shooting_data
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
shooting_data$hover <- paste(shooting_data$city, shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lng = lng, lat = lat, text = hover, marker = list(size = killed), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
library(dplyr)
library(plotly)
library(jsonlite)
shooting_data$hover <- paste(shooting_data$city, shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lng = lng, lat = lat, text = hover, marker = list(size = killed), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
file_path <- "C:/Users/Evan/info498f/a6-mapping-shootings"
#Stored the Mass-Shooting-Data.csv into a variable called shooting_data
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
shooting_data$hover <- paste(shooting_data$city, shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lng = lng, lat = lat, text = hover, marker = list(size = killed), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
library(knitr)
View(shooting_data)
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
#Created the file path to the Mass-Shooting-Data.csv
file_path <- "C:/Users/Evan/info498f/a6-mapping-shootings"
#Stored the Mass-Shooting-Data.csv into a variable called shooting_data
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lng = lng, lat = lat, text = hover, marker = list(size = killed), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = killed), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 1), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 3), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data$hover <- paste(shooting_data$city, ",", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 2), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
shooting_data$hover <- paste(shooting_data$city, ", ", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
shootings_in_2015 <- sum(shooting_data$killed)
View(shootings_in_2015)
killed_in_2015 <- sum(shooting_data$killed)
injured_in_2015 <- sum(shooting_data$injured)
total_shootings_2015 <- nrow(shooting_data)
killed_in_2015 <- sum(shooting_data$killed)
injured_in_2015 <- sum(shooting_data$injured)
#reports the total number of rows AKA total reported shootings in 2015 [330]
total_shootings_2015 <- nrow(shooting_data)
#reports the total number of people killed in shootings in the US in 2015 [367]
killed_in_2015 <- sum(shooting_data$killed)
#reports the total number of people injured in shootings in the US in 2015 [1317]
injured_in_2015 <- sum(shooting_data$injured)
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = injured, Killed = killed)
---
title: "index"
output: html_document
---
**Assignment 6**
**Evan Taylor**
***
### United States Shooting Information
***
```{r, echo=FALSE, message=FALSE, warning=FALSE}
#install.packages("plotly")
library(dplyr)
library(plotly)
library(knitr)
#Created the file path to the Mass-Shooting-Data.csv
file_path <- "C:/Users/Evan/info498f/a6-mapping-shootings"
#Stored the Mass-Shooting-Data.csv into a variable called shooting_data
shooting_data <- read.csv(paste0(file_path, "/data/", "Mass-Shooting-Data.csv"))
#reports the total number of rows AKA total reported shootings in 2015 [330]
total_shootings_2015 <- nrow(shooting_data)
#reports the total number of people killed in shootings in the US in 2015 [367]
killed_in_2015 <- sum(shooting_data$killed)
#reports the total number of people injured in shootings in the US in 2015 [1317]
injured_in_2015 <- sum(shooting_data$injured)
```
2015 was a year of many positives, but also many negatives. There were **`r total_shootings_2015`** reported shootings in 2015, with **`r injured_in_2015`** people injured, and **`r killed_in_2015`** people killed in those shootings. Below is a table showing...
```{r, echo=FALSE, message=FALSE, warning=FALSE}
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = injured, Killed = killed)
```
```{r, echo=FALSE, message=FALSE, warning=FALSE}
shooting_data$hover <- paste(shooting_data$city, ", ", shooting_data$state, shooting_data$injured, "Injured", shooting_data$killed, "Killed")
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 2), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
```
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = injured, Killed = killed)
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = sum(injured), Killed = sum(killed))
View(state_shootings)
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = sum(injured), Killed = sum(killed)) %>%
arrange(desc(injured, killed))
state_shootings <- shooting_data %>%
group_by(state) %>%
summarise(Injured = sum(injured), Killed = sum(killed)) %>%
arrange(desc(Injured, Killed))
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
showlakes = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 2), color = toRGB('white'), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
plot_ly(shooting_data, lon = lng, lat = lat, text = hover, marker = list(size = (killed) + 2), color = toRGB('red'), type="scattergeo", locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
plot_ly(shooting_data,
lon = lng,
lat = lat,
text = hover,
marker = list(size = (killed) + 2, color = toRGB('red')),
type="scattergeo",
locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
plot_ly(shooting_data,
lon = lng,
lat = lat,
text = hover,
marker = list(size = (killed) + 2, color = toRGB('white')),
type="scattergeo",
locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
plot_ly(shooting_data,
lon = lng,
lat = lat,
text = hover,
marker = list(size = (killed) + 2, color = toRGB('red')),
type="scattergeo",
locationmode = 'USA-states') %>%
layout(title = 'Mass Shootings 2015', geo = g)
```
library(shiny)
library("shiny")
install.packages("shiny")
library(shiny)
shinyServer(function(input, output) {
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col='blue')
})
library(shiny)
---
title: "index"
date: "February 21, 2016"
output: html_document
---
### Assignment 7 Collaborative Coding
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(plotly)
library(knitr)
setwd("C:/Users/Evan/info498f/a7-collaborative-coding-")
source("scripts/summaryInfo.R")
#source("visualization1.R")
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
```
Based on the survey taken at the beginning of this quarter, there are **`r summary_info(total_fresh)`** freshman, **`r summary_info(total_soph)`** sophomores, **`r summary_info(total_jun)`** juniors, and **`r summary_info(total_senior)`** seniors in the class that completed the survey.
When examining the Operating Systems that the class uses, we found the number of students that use Mac or Windows Operating Systems. Out of the sample **`r summary_info(mac_users)`** students use a Mac operating system, while **`r summary_info(windows_users)`** students use a Windows OS.
```{r, echo=FALSE, message=FALSE, warning=FALSE}
#visualization1(data)
```
summary_info(ret$total_fresh)
summary_info(total_fresh)
summary_info(ret)
summary_info(data)
ballsack <- summary_info(data)
ballsack
ballsack$total_fresh
info <- summary_info(data)
---
title: "index"
date: "February 21, 2016"
output: html_document
---
### Assignment 7 Collaborative Coding
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(plotly)
library(knitr)
setwd("C:/Users/Evan/info498f/a7-collaborative-coding-")
source("scripts/summaryInfo.R")
#source("visualization1.R")
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
info <- summary_info(data)
```
Based on the survey taken at the beginning of this quarter, there are **`r summary_info(total_fresh)`** freshman, **`r summary_info(total_soph)`** sophomores, **`r summary_info(total_jun)`** juniors, and **`r summary_info(total_senior)`** seniors in the class that completed the survey.
When examining the Operating Systems that the class uses, we found the number of students that use Mac or Windows Operating Systems. Out of the sample **`r summary_info(mac_users)`** students use a Mac operating system, while **`r summary_info(windows_users)`** students use a Windows OS.
```{r, echo=FALSE, message=FALSE, warning=FALSE}
#visualization1(data)
```
---
title: "index"
date: "February 21, 2016"
output: html_document
---
### Assignment 7 Collaborative Coding
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(plotly)
library(knitr)
setwd("C:/Users/Evan/info498f/a7-collaborative-coding-")
source("scripts/summaryInfo.R")
source("visualization1.R")
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
info <- summary_info(data)
```
***
#### Summary Information
Based on the survey taken at the beginning of this quarter, there are **`r info$total_fresh`** freshman, **`r info$total_soph`** sophomores, **`r info$total_jun`** juniors, and **`r info$total_senior`** seniors in the class that completed the survey.
When examining the Operating Systems that the class uses, we found the number of students that use Mac or Windows Operating Systems. Out of the sample **`r info$mac_users`** students use a Mac operating system, while **`r info$windows_users`** students use a Windows OS.
Of the people that responded to the survey, **`r info$yes_apply`** said that they were going to apply to the Informatics major, while **`r info$maybe_apply`** responded "maybe" and only **`r info$no_apply`** saying that they would not apply to the Informatics major.
As for sports fans that responded to the survey, **`r info$seahawks_fan`** responded that they were Seahawks fans while **`r info$not_seahawks_fan`** said that they were not Seahawks fans. This turns out to be **`r info$prohawks_class_prop`** percent of the people that responded to the survey as Seahawks fans while **`r info$nohawks_class_prop`** percent are not Seahawks fans.
Lastly, students were asked at the beginning of the quarter how familiar they were with the programming language R. **`r info$intermediate_experience`** people reported that they were "Intermediate Users", **`r info$some_experience`** people said that they had used it a few times before taking the class, and **`r info$no_experience`** people had no previous experience in R before taking this class.
***
#### Data Visualization #1
```{r, echo=FALSE, message=FALSE, warning=FALSE}
visualization1(data)
```
